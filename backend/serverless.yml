service: ecommerce-backend

provider:
  name: aws
  runtime: nodejs22.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  
  # Stage-specific environment variables from custom.properties.yml
  environment:
    NODE_ENV: ${self:provider.stage}
    STAGE: ${self:provider.stage}
    
    # Database Configuration
    DB_HOST: ${self:custom.stages.${self:provider.stage}.dbHost}
    DB_PORT: ${self:custom.stages.${self:provider.stage}.dbPort}
    DB_NAME: ${self:custom.stages.${self:provider.stage}.dbName}
    DB_USERNAME: ${self:custom.stages.${self:provider.stage}.dbUsername}
    DB_PASSWORD: ${self:custom.stages.${self:provider.stage}.dbPassword}
    
    # JWT Configuration
    JWT_SECRET: ${self:custom.stages.${self:provider.stage}.jwtSecret}
    JWT_EXPIRES_IN: ${self:custom.stages.${self:provider.stage}.jwtExpiresIn}
    
    # Redis Configuration (optional)
    REDIS_URL: ${self:custom.stages.${self:provider.stage}.redisUrl}
    
    # Application Configuration
    APP_VERSION: ${self:custom.stages.${self:provider.stage}.appVersion}
    
    # S3 Configuration
    S3_BUCKET_NAME: ${self:custom.stages.${self:provider.stage}.s3BucketName}
    
  # Stage-specific VPC Configuration from custom.properties.yml
  vpc:
    securityGroupIds:
      - ${self:custom.stages.${self:provider.stage}.securityGroupId}
    subnetIds:
      - ${self:custom.stages.${self:provider.stage}.subnetId1}
      - ${self:custom.stages.${self:provider.stage}.subnetId2}
  
  # Enhanced IAM permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - rds:DescribeDBInstances
            - rds:DescribeDBClusters
          Resource: "*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:PutObjectAcl
          Resource: 
            - "arn:aws:s3:::${self:custom.stages.${self:provider.stage}.s3BucketName}/*"
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: 
            - "arn:aws:s3:::${self:custom.stages.${self:provider.stage}.s3BucketName}"
  
  # API Gateway configuration
  httpApi:
    cors:
      allowedOrigins:
        - ${self:custom.stages.${self:provider.stage}.frontendUrl}
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowCredentials: true
  
  # Deployment configuration
  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-deployments
    versioning: true
    # serverSideEncryption: AES256
    # reservedConcurrency: 10
  
  # Lambda function defaults
  memorySize: ${self:custom.stages.${self:provider.stage}.memorySize, 512}
  timeout: ${self:custom.stages.${self:provider.stage}.timeout, 30}

# Package configuration
package:
  patterns:
    - '!node_modules/.cache/**'
    - '!.git/**'
    - '!*.md'
    - '!tests/**'
    - '!.env*'
    - '!docs/**'
    - '!coverage/**'

plugins:
  - serverless-offline
  # - serverless-dotenv-plugin
  # - serverless-plugin-warmup

custom:
  # Stage-specific configurations from external file
  stages: ${file(./custom.properties.yml):stages}
  
  # Serverless Offline Configuration
  serverless-offline:
    httpPort: 3003
    host: 0.0.0.0
    stage: dev
  
  # Warmup plugin configuration
  # warmup:
  #   default:
  #     enabled: ${self:custom.stages.${self:provider.stage}.warmup, false}
  #     events:
  #       - schedule: 'rate(5 minutes)'
  #     concurrency: 1
  #     timeout: 20

functions:
  # Main API Gateway handler (fallback for all routes)
  api:
    handler: src/lambda.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
      - httpApi:
          path: /
          method: ANY
    timeout: 30
    # warmup:
    #   enabled: ${self:custom.stages.${self:provider.stage}.warmup, false}
#################################################################
  # Health check function
################################################################  
  health:
    handler: src/handlers/health.handler
    events:
      - httpApi:
          path: /health
          method: get
    timeout: 30
################################################################
  # Authentication functions
################################################################
  register:
    handler: src/handlers/auth.register
    events:
      - httpApi:
          path: /api/auth/register
          method: post
    timeout: 15
################################################################
  login:
    handler: src/handlers/auth.login
    events:
      - httpApi:
          path: /api/auth/login
          method: post
    timeout: 15
################################################################  
  # Product functions
################################################################
  getProducts:
    handler: src/handlers/products.getProducts
    events:
      - httpApi:
          path: /api/products
          method: get
    timeout: 15
################################################################
  getProduct:
    handler: src/handlers/products.getProduct
    events:
      - httpApi:
          path: /api/products/{id}
          method: get
    timeout: 10
################################################################
  createProduct:
    handler: src/handlers/products.createProduct
    events:
      - httpApi:
          path: /api/products
          method: post
    timeout: 15
###############################################################
  # Cart functions
################################################################
  getCart:
    handler: src/handlers/cart.getCart
    events:
      - httpApi:
          path: /api/cart
          method: get
    timeout: 15
################################################################
  addToCart:
    handler: src/handlers/cart.addToCart
    events:
      - httpApi:
          path: /api/cart/add
          method: post
    timeout: 15
################################################################
  # Wallet functions
################################################################
  getWallet:
    handler: src/handlers/wallet.getWallet
    events:
      - httpApi:
          path: /api/wallet
          method: get
    timeout: 15
################################################################
  getTransactionHistory:
    handler: src/handlers/wallet.getTransactionHistory
    events:
      - httpApi:
          path: /api/wallet/transactions
          method: get
    timeout: 15
################################################################
  addFunds:
    handler: src/handlers/wallet.addFunds
    events:
      - httpApi:
          path: /api/wallet/deposit
          method: post
    timeout: 15
################################################################
  checkBalance:
    handler: src/handlers/wallet.checkBalance
    events:
      - httpApi:
          path: /api/wallet/balance
          method: get
    timeout: 10
################################################################
  # Checkout functions
################################################################
  processCheckout:
    handler: src/handlers/checkout.processCheckout
    events:
      - httpApi:
          path: /api/checkout
          method: post
    timeout: 30
################################################################
  getCheckoutSummary:
    handler: src/handlers/checkout.getCheckoutSummary
    events:
      - httpApi:
          path: /api/checkout/summary
          method: get
    timeout: 15
################################################################
  getOrderHistory:
    handler: src/handlers/checkout.getOrderHistory
    events:
      - httpApi:
          path: /api/checkout/orders
          method: get
    timeout: 15
################################################################
  getOrder:
    handler: src/handlers/checkout.getOrder
    events:
      - httpApi:
          path: /api/checkout/orders/{orderId}
          method: get
    timeout: 10
################################################################
  # Image Upload functions
################################################################
  uploadProductImage:
    handler: src/handlers/productImageUpload.handler
    events:
      - httpApi:
          path: /api/products/images/upload
          method: post
    timeout: 30
    memorySize: 1024
################################################################
  deleteProductImage:
    handler: src/handlers/productImageUpload.deleteHandler
    events:
      - httpApi:
          path: /api/products/{productId}/image
          method: delete
    timeout: 30
################################################################
  uploadUserProfileImage:
    handler: src/handlers/userImageUpload.uploadProfileImage
    events:
      - httpApi:
          path: /api/users/profile/image
          method: post
    timeout: 30
    memorySize: 512
################################################################
  deleteUserProfileImage:
    handler: src/handlers/userImageUpload.deleteHandler
    events:
      - httpApi:
          path: /api/users/profile/image
          method: delete
    timeout: 30
################################################################
# CloudFormation resources
################################################################
resources:
  Resources:
    # API Gateway CORS configuration
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'RestApiApigEvent'
    
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'RestApiApigEvent' 